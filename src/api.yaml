
swagger: "2.0"
info: 
  title: Homejam backend
  description: Rest API for a class management system.
  version: '1.0.0'
  contact: 
    email: mayurbhowad1995@gmail.com
  servers:
    -url: "http://127.0.0.1:4001/"
    description: This is local server 
  
schemes: [http, https]

definitions:
    Teacher: 
      type: object
      required: 
        - email
        - name
        - password
        - subject
      properties:
        id:
          type: int
          description: Auto generated by postgres 
        email:
          type: string
          description: unique email id for registration
        name:
          type: string
          description: Name of teacher
        password:
          type: string
          description: password for login 
        subject:
          type: string
          description: subject that teacher teaches
      example:
        id: 1
        email: johndoe@some.com
        name: john
        password: 123
        subject: mathematics
    Student: 
      type: object
      required: 
        - email
        - name
        - password
      properties:
        id:
          type: int
          description: Auto generated by postgres 
        email:
          type: string
          description: unique email id for registration
        name:
          type: string
          description: Name of teacher
        password:
          type: string
          description: password for login
      example:
        id: 1
        email: johndoe@some.com
        name: john
        password: 123

securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header


paths: 
  /teacher/teacher_classes:
    get:
      summary: get all classes of logged in teacher
      tags: [Teacher]
      security:
        - bearerAuth: []
      consumes: 
        - application/json
      responses:
        200:
          description: OK
        400:
          description: Error
          schema:
            type: object
            properties:
              success: 
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "the reason that causes this error"
        403:
          description: 'Error: Forbidden'
          schema:
            type: object
            properties:
              success: 
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "A token is required for authentication"


  /teacher/signup:
    post:
      summary: Signup as teacher
      tags: [Teacher]
      consumes: 
        - application/json
      parameters:
        - in: body
          name: Teacher
          schema:
            type: object
            properties:
              name: 
                type: string
              email: 
                type: string
              password: 
                type: string
              subject: 
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              success: 
                type: boolean
              data:
                schema:
                type: array
                example:
                  t_id: 1
                  name: teacher name
                  email: teacher@email.com
                  password: $2a$10$CYlKZByQ6R65nZkakbKrUu3LS/cuURQ7Vu5WUXdwIsYs.bxLyK9Za
                  subject: mathematics
                  createAt: 2021-12-11T11:41:39.556Z
                  updateAt: null
                  roll: teacher
        400:
          description: Error
          schema:
            type: object
            properties:
              success: 
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "the reason that causes this error"


  /teacher/login:
    post:
      summary: login as teacher
      tags: [Teacher]
      consumes: 
        - application/json
      parameters:
        - in: body
          name: Teacher
          schema:
            type: object
            properties:
              email: 
                type: string
              password: 
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              success: 
                type: true
              token: 
                type: string
            example:
              success: true
              token: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OCwibmFtZSI6ImR1cmdhIiwiZW1haWwiOiJkdXJnYUBzb21lLmNvbSIsInJvbGwiOiJ0ZWFkaGVyIiwic3ViamVjdCI6IkJpb2wvZ3kiLCJpYXQiOjE2MzkyMjUyODV9.Mg0xEid7EBZphKebttKpmdUcU-C5Ygk21O16UI9vz1E
              
        400:
          description: Error
          schema:
            type: object
            properties:
              success: 
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "the reason that causes this error"
                








  /student/student_classes:
    get:
      summary: get all classes of logged in student
      tags: [Student]
      security:
        - bearerAuth: []
      consumes: 
        - application/json
      responses:
        200:
          description: OK
        400:
          description: Error
          schema:
            type: object
            properties:
              success: 
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "the reason that causes this error"
        403:
          description: 'Error: Forbidden'
          schema:
            type: object
            properties:
              success: 
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "A token is required for authentication"

  /student/signup:
      post:
        summary: Signup as student
        tags: [Student]
        consumes: 
          - application/json
        parameters:
          - in: body
            name: Student
            schema:
              type: object
              properties:
                name: 
                  type: string
                email: 
                  type: string
                password: 
                  type: string
        responses:
          200:
            description: OK
            schema:
              type: object
              properties:
                success: 
                  type: boolean
                data:
                  schema:
                  type: array
                  example:
                    t_id: 1
                    name: student name
                    email: student@email.com
                    password: $2a$10$CYlKZByQ6R65nZkakbKrUu3LS/cuURQ7Vu5WUXdwIsYs.bxLyK9Za
                    createAt: 2021-12-11T11:41:39.556Z
                    updateAt: null
                    roll: student
          400:
            description: Error
            schema:
              type: object
              properties:
                success: 
                  type: boolean
                message:
                  type: string
              example:
                success: false
                message: "the reason that causes this error"

  /student/login:
    post:
      summary: login as student
      tags: [Student]
      consumes: 
        - application/json
      parameters:
        - in: body
          name: Student
          schema:
            type: object
            properties:
              email: 
                type: string
              password: 
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              success: 
                type: boolean
              data:
                schema:
                type: array
                example:
                  t_id: 1
                  name: student name
                  email: student@email.com
                  password: $2a$10$CYlKZByQ6R65nZkakbKrUu3LS/cuURQ7Vu5WUXdwIsYs.bxLyK9Za
                  createAt: 2021-12-11T11:41:39.556Z
                  updateAt: null
                  roll: student
        400:
          description: Error
          schema:
            type: object
            properties:
              success: 
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "the reason that causes this error"     














  /class/newClass:
    post:
      summary: Add new class by teacer
      tags: [Class]
      security:
        - bearerAuth: []
      consumes: 
        - application/json
      parameters:
        - in: body
          name: Class
          schema:
            type: object
            properties:
              startAt: 
                type: string
              endAt: 
                type: string
            example:
              startAt: 2021-12-20 12:00:00
              endAt: 2021-12-20 12:00:00
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              success: 
                type: boolean
              data:
                schema:
                type: array
                example:
                  c_id: 1
                  subject: mathematics
                  startAt: 2021-12-20 12:00:00
                  endAt: 2021-12-20 14:00:00
                  teacher_id: 1
                  createAt: 2021-12-11T11:41:39.556Z
                  updateAt: null
        403:
          description: Error
          schema:
            type: object
            properties:
              success: 
                type: boolean
              message:
                type: string
            example:
              success: false
              message: "the reason that causes this error"                